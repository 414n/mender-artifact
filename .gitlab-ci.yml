stages:
  - test
  - build
  - publish

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

image: golang:1.14-alpine3.11

cache:
  paths:
    - /go/src/github.com
    - /go/src/golang.org
    - /go/src/google.golang.org
    - /go/src/gopkg.in

variables:
   DOCKER_HOST: tcp://docker:2375/
   DOCKER_REPOSITORY: mendersoftware/mender-artifact
   S3_BUCKET_NAME: "mender"
   S3_BUCKET_PATH: "mender-artifact"

test:static:
  stage: test
  before_script:
    - mkdir -p /go/src/github.com/mendersoftware /go/src/_/builds
    - cp -r $CI_PROJECT_DIR /go/src/github.com/mendersoftware/mender-artifact
    - ln -s /go/src/github.com/mendersoftware /go/src/_/builds/mendersoftware
    - cd /go/src/github.com/mendersoftware/mender-artifact
    - apk update && apk add git make
    # Install code coverage tooling
    - make get-tools

    # Rename the branch we're on, so that it's not in the way for the
    # subsequent fetch. It's ok if this fails, it just means we're not on any
    # branch.
    - git branch -m temp-branch || true
    # Git trick: Fetch directly into our local branches instead of remote
    # branches.
    - git fetch origin 'refs/heads/*:refs/heads/*'
    # Get last remaining tags, if any.
    - git fetch --tags origin

  script:
    - apk add bash dosfstools e2fsprogs e2fsprogs-extra gcc libc6-compat mtools musl-dev parted perl-utils xz-dev
    - make extracheck
    - make coverage
    - mv /go/src/github.com/mendersoftware/mender-artifact/coverage.txt $CI_PROJECT_DIR/coverage.txt
  artifacts:
    expire_in: 2w
    untracked: true
    paths:
      - coverage.txt

build:docker:
  image: docker
  services:
    - docker:19.03.5-dind
  stage: build
  script:
    - docker build -t $DOCKER_REPOSITORY:pr .
    - docker save $DOCKER_REPOSITORY:pr > image.tar
  artifacts:
    expire_in: 2w
    paths:
      - image.tar
  tags:
    - docker

build:make:
  image: docker
  services:
    - docker:19.03.5-dind
  before_script:
    - apk add --no-cache make
  stage: build
  script:
    - make build-natives-contained
  artifacts:
    expire_in: 2w
    paths:
      - mender-artifact-*
  tags:
    - docker

publish:tests:
  image: alpine
  stage: publish
  before_script:
    - apk add --no-cache bash curl findutils git
  dependencies:
    - test:static
  script:
    - bash -c "bash <(curl -s https://codecov.io/bash) -Z"

publish:s3:
  stage: publish
  image: debian:buster
  dependencies:
    - build:make
  before_script:
    - apt update && apt install -yyq awscli
  script:
    - for bin in mender-artifact-darwin mender-artifact-linux mender-artifact-windows.exe; do
        platform=${bin#mender-artifact-};
        platform=${platform%.*};
        echo "Publishing ${CI_COMMIT_REF_NAME} version for ${platform} to S3";
        aws s3 cp ${bin}
          s3://$S3_BUCKET_NAME/$S3_BUCKET_PATH/${CI_COMMIT_REF_NAME}/${platform}/mender-artifact;
        aws s3api put-object-acl --acl public-read --bucket $S3_BUCKET_NAME
          --key $S3_BUCKET_PATH/${CI_COMMIT_REF_NAME}/${platform}/mender-artifact;
      done
  only:
    - /^(master|[0-9]+\.[0-9]+\.x)$/
